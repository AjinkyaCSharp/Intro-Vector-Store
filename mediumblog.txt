What is Vector Database?
In a nutshell, a vector database (or we can call it a vector DB) is a specific kind of database that stores information (data) in the form of high-dimensional vector representations. This data could be anything like images, text, etc.
You can imagine a vector database as a super-smart librarian who knows every book in the library. They also know how to organize all the books based on their themes and connections. It makes it easy for us when we want to find a book with specific topic.
Essentially, a vector DB works like that but in the digital world. It can organize vast amounts of data points based on their similarity. This allows us to find information in semantic or contextual relevance rather than relying on exact matches or set criteria like conventional databases. For example, a vector DB can help us discover articles similar to another specific article. Or we can also combine vector DB with LLM to create robust Retrieval Augmented Generation (RAG) system (what do you think, should I write an article to explain about RAG?).
Vector
I believe some of you are already familiar with vectors. It’s not a new concept, both Math and Physics have their own definitions of vectors. In physics, vector is a quantity that has both magnitude and direction. In math, we imagine vectors as a geometric entity that describe the magnitude and direction of something.

What are Embeddings?
An embedding is a technique for representing complex data, such as images, text, or audio, as numerical vectors.

These embeddings capture the essence of the data and show clearly the semantic similarity (or relationship) between different objects, with similar objects having vectors that are close to each other in the vector space. Thus, ML algorithms allow them to be efficiently processed and analyzed.

ML models often generate embeddings as part of their training process. For LLMs, an embedding model is put in place to create the embeddings

Embeddings are vectors that represent the essential features of a data point. For example, a natural language processing model might generate embeddings for words or sentences.

Embeddings can be used for a variety of tasks, such as clustering, classification, and anomaly detection. Vector databases can be used to store and query embeddings efficiently, which makes them ideal for ML applications.

To see what embeddings look like, check out this Vectorizer created by Kenny, it converts texts to embeddings.

Note: An embedding is a vector representation, but not all vectors are embeddings.


Putting it all together, let us define a vector database.

What is a Vector Database?
A vector database is a type of database that stores and manages unstructured data, such as text, images, or audio, in high-dimensional vectors, to make it easy to find and retrieve similar objects quickly at scale in production.

They work by using algorithms like vector similarity search to index and query vector embeddings,

The importance of vector databases in LLM projects lies in their ability to provide easy search, high performance, scalability, and data retrieval by comparing values and finding similarities between them

Vector database’s search capabilities can be used in various applications ranging from classical ML use cases, such as recommender systems, to providing long-term memory to large language models in modern applications, to text understanding, video summarization, drug discovery, stock market analysis, and much more.

As data continues to grow in complexity and volume, the scalability, speed, and accuracy offered by vector databases position them as a critical tool for extracting meaningful insights and unlocking new opportunities across various domains.

What are the benefits of Vector Databases?
Here are some specific reasons why vector databases are so well-suited for LLMs and generative AI:

Handling Massive Data Loads
Vector databases can handle the massive amounts of data that are generated by LLMs and generative AI. Traditional databases might struggle with the millions or even billions of data points produced in a single run, but vector databases are purpose-built to handle such large datasets with efficiency.

Efficient Similarity Searches
Vector databases can find data that is similar to a given query vector. This is essential for tasks such as image search and content recommendation, which are often used in conjunction with LLMs and generative AI. For example, if you are using an LLM to generate a new image, you can use a vector database to find other images that are similar to the generated image.

Integration with ML Algorithms
Vector databases can be integrated with machine learning algorithms. This makes it easy to use vector databases to train and evaluate machine learning models. For example, you can use a vector database to store the data that is used to train a model, and then use the vector database to search for the data that is most relevant to the model.

Handling Vector Embeddings
Vector databases provide a superior solution for handling vector embeddings by addressing the limitations of standalone vector indices, such as scalability challenges, cumbersome integration processes, and the absence of real-time updates and built-in security measures.

List of Some Top Vector Databases
There are several vector database solutions available in the market, each with its own set of features and capabilities. Some of the top vector database solutions include:

Weaviate
Pinecone
Chroma DB
Qdrant
Milvus